CREATE TEMP TABLE inventory_ids
AS WITH RECURSIVE check_set AS (
    SELECT id, set_num, {quantity} AS quantity
    FROM inventories
    WHERE set_num = '{set_number}'
        AND version >= (SELECT MAX(version) FROM inventories WHERE set_num = '{set_number}')

    UNION

    SELECT inventories.id AS id, inventories.set_num, inventory_sets.quantity * {quantity} AS quantity
    FROM inventory_sets, inventories, check_set
    WHERE inventory_sets.inventory_id = check_set.id
        AND inventories.set_num = inventory_sets.set_num
)
SELECT * FROM check_set;

CREATE TEMP TABLE set_parts 
AS SELECT ids.set_num, parts.*
FROM inventory_ids AS ids, agg_parts AS parts
WHERE parts.inventory_id = ids.id;


CREATE TEMP TABLE set_minifigs
AS SELECT i.id AS id, ids.set_num AS set_num, iv.fig_num, iv.quantity * ids.quantity AS quantity
FROM inventory_minifigs AS iv,
        inventories AS i,
        inventory_ids AS ids
WHERE iv.inventory_id = ids.id
    AND i.set_num = iv.fig_num;

CREATE TEMP TABLE set_minifigs_parts 
AS SELECT ids.set_num, ids.fig_num, parts.*
FROM set_minifigs AS ids, agg_parts AS parts
WHERE parts.inventory_id = ids.id;

CREATE TEMP TABLE set_elements 
AS SELECT p.set_num, p.part_num, p.color_id, e.element_id
FROM set_parts AS p
LEFT JOIN elements AS e
        ON p.part_num = e.part_num
        AND p.color_id = e.color_id

UNION

SELECT p.set_num, p.part_num, p.color_id, e.element_id
FROM set_minifigs_parts AS p
LEFT JOIN elements AS e
        ON p.part_num = e.part_num
        AND p.color_id = e.color_id;